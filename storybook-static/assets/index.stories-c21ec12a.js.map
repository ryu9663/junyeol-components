{"version":3,"file":"index.stories-c21ec12a.js","sources":["../../src/utils/public/cleanClassName.ts","../../src/components/atoms/Button/index.tsx"],"sourcesContent":["export function cleanClassName(className: string | undefined | null | false) {\n  if (className) {\n    return className\n      .replace(/(undefined)|(false)|\\n/g, '')\n      .replace(/ +(?= )/g, '')\n      .replace(/^ */g, '')\n      .replace(/ *$/g, '');\n  }\n}\n","import { cleanClassName } from \"../../../utils\";\nimport styles from \"./index.module.scss\";\n\nexport type ButtonColor = \"primary\" | \"secondary\";\nexport type ButtonSize = \"small\" | \"medium\" | \"large\";\n\ninterface ButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  color?: ButtonColor;\n  /**\n   * What background color to use\n   */\n\n  /**\n   * How large should the button be?\n   */\n  size?: ButtonSize;\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  color = \"primary\",\n  size = \"medium\",\n  label,\n\n  ...props\n}: ButtonProps) => {\n  return (\n    <button\n      type=\"button\"\n      className={cleanClassName(\n        `${styles[\"storybook-button\"]} ${\n          styles[`storybook-button--${color}`]\n        } ${styles[`storybook-button--${size}`]}`\n      )}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n"],"names":["cleanClassName","className","Button","color","size","label","props","jsx","styles"],"mappings":"iHAAO,SAASA,EAAeC,EAA8C,CAC3E,GAAIA,EACF,OAAOA,EACJ,QAAQ,0BAA2B,EAAE,EACrC,QAAQ,WAAY,EAAE,EACtB,QAAQ,OAAQ,EAAE,EAClB,QAAQ,OAAQ,EAAE,CAEzB,8XCwBOC,EAAA,CAAA,CAAgB,MAAAC,EAAA,UACb,KAAAC,EAAA,SACD,MAAAC,EACP,GAAAC,CAGF,IACEC,EAAA,IACE,SAAC,CAAA,KAAA,SACM,UAAAP,EACM,GAAAQ,EAAA,kBAAA,CAAA,IAAAA,EAAA,qBAAAL,CAAA,EAAA,CAAA,IAAAK,EAAA,qBAAAJ,CAAA,EAAA,CAAA,EAG8B,EACzC,GAAAE,EACI,SAAAD,CAEH,CAAA;;;;;;;;;;;;;;;;;;;;;;"}